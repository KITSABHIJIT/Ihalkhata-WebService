package com.itext.test;

import java.awt.Color;
import java.util.Date;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import com.itext.constants.PDFConstants;
import com.lowagie.text.BadElementException;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.Image;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;

public class GeneratePDF {
	
	private static Font catFont = new Font(Font.TIMES_ROMAN,20,Font.NORMAL,Color.BLUE);
	private static Font cellFont = new Font(Font.TIMES_ROMAN,12,Font.ITALIC,Color.BLACK);
	private static Font exceedCellFont = new Font(Font.TIMES_ROMAN,12,Font.ITALIC,Color.RED);
	private static Font subFont = new Font(Font.TIMES_ROMAN, 14,Font.BOLD,Color.BLUE);
	private static Font smallBold = new Font(Font.TIMES_ROMAN, 16,Font.NORMAL,Color.RED);
	
	

	public static void createPDF(JSONArray textArray,Document document,String userId,String startMonth,String year,String endMonth,String endYear, String limit,String title){
		
		try {
		
			addMetaData(document);
			if(title.equals("Y"))
			addTitlePage(document,textArray,userId,startMonth,year,endMonth,endYear);
			createTable(document,textArray,limit);
			
		
		} catch (Exception e2) {
			System.out.println(e2.getMessage());
			
		}
	}
	
	// iText allows to add metadata to the PDF which can be viewed in your Adobe
	// Reader
	// under File -> Properties
	private static void addMetaData(Document document) {
		document.addTitle(PDFConstants.addTitle);
		document.addSubject(PDFConstants.addSubject);
		document.addKeywords(PDFConstants.addKeywords);
		document.addAuthor(PDFConstants.addAuthor);
		document.addCreator(PDFConstants.addCreator);
	}

	private static void addTitlePage(Document document,JSONArray textArray,String userId,String startMonth,String year,String endMonth,String endYear)throws DocumentException {
		String [] monthName={"January", "February", "March", "April", "May", "June","July", "August", "September", "October", "November", "December" };
		int stMonth=Integer.parseInt(startMonth)-1;
		int enMonth=Integer.parseInt(endMonth)-1;
		String monthRange="";
		if(stMonth==enMonth)
			monthRange=monthName[stMonth];
		else
			monthRange=monthName[stMonth]+" to "+monthName[enMonth];
		
		try{
		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		preface.add(new Paragraph(PDFConstants.Title, catFont));

		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		preface.add(new Paragraph(PDFConstants.Para1 + System.getProperty("user.name"),//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				smallBold));
		addEmptyLine(preface, 1);
		preface.add(new Paragraph(PDFConstants.Para2 +new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				smallBold));
		addEmptyLine(preface, 1);
		preface.add(new Paragraph(PDFConstants.Para3 +userId, //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				smallBold));
		addEmptyLine(preface, 1);
		preface.add(new Paragraph(PDFConstants.Para4 +monthRange, //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				smallBold));
		addEmptyLine(preface, 1);
		preface.add(new Paragraph(PDFConstants.Para5 +year, //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				smallBold));
		addEmptyLine(preface, 1);
		preface.add(new Paragraph(PDFConstants.Para6 +PDFConstants.Rs+textArray.getJSONObject(textArray.size()-1).getString(PDFConstants.Data5), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				smallBold));
		
		
		document.add(preface);
		
		// Start a new page
//		com.lowagie.text.Image image = com.lowagie.text.Image.getInstance("PDF-logoBIG.gif");
//		image.setAlignment(Image.ALIGN_CENTER | Image.TEXTWRAP);//Code 2
		Image image = Image.getInstance(PDFConstants.Image);
		image.setAlignment(Image.ALIGN_CENTER);
		image.scaleAbsolute(150f, 150f);

		document.add(image);
		
		
		
		document.newPage();
		} catch (Exception e2) {
			System.out.println(e2.getMessage());
			
		}
	}

	

	private static void createTable(Document document,JSONArray textArray,String limit) {
		
		try{
		float[] colsWidth = {8f, 8f,12f,8f,8f};
		PdfPTable table = new PdfPTable(colsWidth);

		

		// t.setBorderColor(BaseColor.GRAY);
		// t.setPadding(4);
		// t.setSpacing(4);
		// t.setBorderWidth(1);

		PdfPCell c1 = new PdfPCell(new Phrase(PDFConstants.Header1,subFont));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase(PDFConstants.Header2,subFont));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase(PDFConstants.Header3,subFont));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		
		c1 = new PdfPCell(new Phrase(PDFConstants.Header4,subFont));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		
		c1 = new PdfPCell(new Phrase(PDFConstants.Header5,subFont));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		
		table.setHeaderRows(1);

		
		for(int i=0;i<textArray.size();i++){
			
			JSONObject jsonItems =textArray.getJSONObject(i); 
			Font newCellFont=null;
			if(Double.parseDouble(jsonItems.getString(PDFConstants.Data4))>=Double.parseDouble(limit))
				newCellFont=exceedCellFont;
			else
				newCellFont=cellFont;
			
			String [] dateArray=jsonItems.getString(PDFConstants.Data1).split("-");
			String finalDate=dateArray[2]+"/"+dateArray[1]+"/"+dateArray[0];
			table.addCell(new Phrase(finalDate,newCellFont));
			table.addCell(new Phrase(jsonItems.getString(PDFConstants.Data2),newCellFont));
			if(jsonItems.getString(PDFConstants.Data3)=="")
				table.addCell(new Phrase("",newCellFont));
			else
				table.addCell(new Phrase(jsonItems.getString(PDFConstants.Data3),newCellFont));
			
			table.addCell(new Phrase(PDFConstants.Rs+jsonItems.getString(PDFConstants.Data4),newCellFont));
			table.addCell(new Phrase(PDFConstants.Rs+jsonItems.getString(PDFConstants.Data5),newCellFont));
			
			}
		

		document.add(table);
		Paragraph preface = new Paragraph();
		addEmptyLine(preface, 1);
		preface.add(new Paragraph(PDFConstants.NB+limit ,smallBold));
		
		
		document.add(preface);
		} catch (Exception e2) {
			System.out.println(e2.getMessage());
			
		}
	}

	


	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}
}
